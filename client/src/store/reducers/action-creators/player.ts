import {$authApi} from "../../../http";

export const fetchAuthorTracksPaged = async (authorId: string, page: number, size: number) => {
    try {
        const params = new URLSearchParams();
        params.append("page", page.toString());
        params.append("size", size.toString());

        console.log(`üéµ API –∑–∞–ø—Ä–æ—Å: /tracks/ByAuthor/Popular/${authorId}?${params}`);

        const response = await $authApi.get(`/tracks/ByAuthor/Popular/${authorId}?${params}`);

        console.log('üéµ –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API:', response.data);

        // –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—É
        const tracks = response.data.page?.content || [];
        const totalPages = response.data.page?.totalPages || 1;

        console.log('üéµ –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ —Ç—Ä–µ–∫–∏:', tracks.length);
        console.log('üéµ –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ totalPages:', totalPages);

        return {
            tracks: tracks,
            totalPages: totalPages
        };
    } catch (error: any) {
        console.error('üéµ –û—à–∏–±–∫–∞ API –∑–∞–ø—Ä–æ—Å–∞:', {
            url: `/tracks/ByAuthor/Popular/${authorId}`,
            error: error.message,
            status: error.response?.status,
            data: error.response?.data
        });
        throw error;
    }
};