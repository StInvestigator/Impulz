version: "3.8"

services:
  client:
    build:
      context: ./client
    container_name: app_client
    ports:
      - "3000:3000"
    depends_on:
      - server

  server:
    build: ./server
    container_name: app_server
    ports:
      - "8083:8083"
    env_file:
      - ./server/.env
    volumes:
      - ./server/src/main/resources/db/migration:/app/db/migration
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  postgres:
    image: postgres:17.4
    container_name: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: impulz
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./src/main/resources/db/migration:/flyway/sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d impulz"]
      interval: 5s
      timeout: 5s
      retries: 10

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.0
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: root
      KC_HOSTNAME: localhost
      KC_HTTP_PORT: 8080
      KC_HTTP_ENABLED: "true"
      KC_PROXY: edge
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_URL: http://localhost:9090
      KC_HOSTNAME_ADMIN_URL: http://localhost:9090
      KC_FEATURES: scripts
    command: ["start-dev", "--import-realm"]
    ports:
      - "9090:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./keycloak_data:/opt/keycloak/data
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 30s
      timeout: 10s
      retries: 3

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy


volumes:
  postgres_data:
  redis-data:
  elasticsearch_data:
